{"ast":null,"code":"var _jsxFileName = \"/Users/denizdemirtas/Desktop/Decal/decal-project/src/Block.js\";\nimport '../Styles/Block.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Block = props => {\n  const newStyle = {\n    backgroundColor: props.color\n  };\n  return (\n    /*#__PURE__*/\n    // ignore this data-testid, it's purely for testing :)\n    _jsxDEV(\"div\", {\n      \"data-testid\": \"main-component\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        style: newStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caption\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = Block;\nexport default Block;\nvar _c;\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Block","props","newStyle","backgroundColor","color","children","className","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/denizdemirtas/Desktop/Decal/decal-project/src/Block.js"],"sourcesContent":["import '../Styles/Block.css';\nimport React from 'react';\n\nconst Block = (props) => {\n    const newStyle =\n    {backgroundColor: props.color }\n\n    return (\n        // ignore this data-testid, it's purely for testing :)\n        <div data-testid='main-component'>\n            {/* You'll notice pre-assigned class names 'post' and 'caption', \n            we took care of the basic block styling! \n            If curious, check out the css in Styles/Block.css */}\n            {/* Refer to hint if stuck on how to color the posts */}\n            <div className=\"post\" style={newStyle}> \n            </div>\n            <div className=\"caption\">\n             <p>{props.color}</p></div>\n        </div>\n    );\n}\n\nexport default Block;"],"mappings":";AAAA,OAAO,qBAAqB;AAC5B,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACrB,MAAMC,QAAQ,GACd;IAACC,eAAe,EAAEF,KAAK,CAACG;EAAM,CAAC;EAE/B;IAAA;IACI;IACAL,OAAA;MAAK,eAAY,gBAAgB;MAAAM,QAAA,gBAK7BN,OAAA;QAAKO,SAAS,EAAC,MAAM;QAACC,KAAK,EAAEL;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChC,eACNZ,OAAA;QAAKO,SAAS,EAAC,SAAS;QAAAD,QAAA,eACvBN,OAAA;UAAAM,QAAA,EAAIJ,KAAK,CAACG;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACzB;AAEd,CAAC;AAAAC,EAAA,GAjBKZ,KAAK;AAmBX,eAAeA,KAAK;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}